{"name":"Cn1-Codescan","tagline":"QR Code and Bar code scanning support for Codename One","body":"# Codename One CodeScanner Library\r\n\r\nThis library provides code scanning (QR code and Bar code) support for Codename One.  This comprises a refactoring of the `com.codename1.codescan` package into a separate cn1lib so that only applications that require this feature need include it.  The codescan package in the core Codename One library will be deprecated in the future, and this library will be the officially supported method of code scanning in Codename One.\r\n\r\n\r\n## License\r\n\r\nApache 2.0\r\n\r\n## Features\r\n\r\n* Scan QR Codes with device camera\r\n* Scan Bar Codes with device camera\r\n\r\n## Supported Platforms\r\n\r\nThis library currently is implemented on Android and iOS.  Use `CodeScanner.isSupported()` to find out if it is supported on the current platform.\r\n\r\n## Installation\r\n\r\nCopy [cn1-codescan.cn1lib](https://github.com/shannah/cn1-codescan/raw/master/cn1-codescan.cn1lib) into your project's \"lib\" directory and refresh libs.\r\n\r\n## Usage Example\r\n\r\nScanning QR Code:\r\n\r\n~~~~\r\n...\r\nimport com.codename1.ext.codescan.CodeScanner;\r\nimport com.codename1.ext.codescan.ScanResult;\r\n...\r\n\r\n    CodeScanner.getInstance().scanQRCode(new ScanResult() {\r\n\r\n        public void scanCompleted(String contents, String formatName, byte[] rawBytes) {\r\n            //barCode.setText(\"Bar: \" + contents);\r\n            cnt.addComponent(new Label(contents));\r\n            cnt.revalidate();\r\n        }\r\n\r\n        public void scanCanceled() {\r\n            System.out.println(\"cancelled\");\r\n        }\r\n\r\n        public void scanError(int errorCode, String message) {\r\n            System.out.println(\"err \" + message);\r\n        }\r\n    });\r\n~~~~\r\n\r\nScanning Bar Code:\r\n\r\n~~~~\r\n...\r\nimport com.codename1.ext.codescan.CodeScanner;\r\nimport com.codename1.ext.codescan.ScanResult;\r\n...\r\n\r\n    CodeScanner.getInstance().scanBarCode(new ScanResult() {\r\n\r\n        public void scanCompleted(String contents, String formatName, byte[] rawBytes) {\r\n            //barCode.setText(\"Bar: \" + contents);\r\n            cnt.addComponent(new Label(contents));\r\n            cnt.revalidate();\r\n        }\r\n\r\n        public void scanCanceled() {\r\n            System.out.println(\"cancelled\");\r\n        }\r\n\r\n        public void scanError(int errorCode, String message) {\r\n            System.out.println(\"err \" + message);\r\n        }\r\n    });   \r\n~~~~\r\n\r\n## Documentation\r\n\r\n* [Javadocs](http://shannah.github.io/cn1-codescan/javadoc/index.html)\r\n\r\n## Building From Source\r\n\r\n~~~~\r\n$ git clone https://github.com/shannah/cn1-codescan.git\r\n$ cd cn1-codescan\r\n$ ant -f configure.xml\r\n$ ant jar\r\n~~~~\r\n\r\nYou'll find `cn1-codescan.cn1lib` inside the `dist` directory.\r\n\r\nNOTE:  The `ant -f configure.xml` is only necessary the first time you build the source.  It will download some dependencies\r\nlike JavaSE.jar, CodenameOne.jar, etc.. that were not included with this repository to save space.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}